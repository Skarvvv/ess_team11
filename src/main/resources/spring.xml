<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 将对应包下的类交给spring管理 -->
    <context:component-scan base-package="com.team11" />

    <!-- 开启aop注解编程 -->
    <aop:aspectj-autoproxy />

    <context:property-placeholder location="classpath:db.properties" />
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          p:driverClassName="${mysql.driverClassName}"
          p:url="${mysql.url}"
          p:username="${mysql.username}"
          p:password="${mysql.password}"
    />

    <!-- 管理工厂 -->
    <bean name="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:mybatis.xml"
    />
    <!-- 配置使spring能够使用mapper机制 -->
    <bean name="mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:sqlSessionFactoryBeanName="sessionFactory"
          p:basePackage="com.team11.dao"
    />

    <!-- 管理事务 -->
    <bean name="manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"
    />
    <tx:annotation-driven transaction-manager="manager" />

    <!-- 配置String-Date自定义转换器 -->
    <!-- 加载一个自定义类型转换器 -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.team11.util.StringToDateConverter" />
            </set>
        </property>
    </bean>
    <!-- 需要手动配置这个类的驱动 -->
    <mvc:annotation-driven conversion-service="conversionService" />

</beans>